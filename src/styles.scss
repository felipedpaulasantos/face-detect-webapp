@import "./variables";
@import "../node_modules/bootstrap/scss/functions";
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/utilities";
@import "./reset";

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$face-detect-webapp-primary: mat-palette($mat-blue, 700, 100, 500);
$face-detect-webapp-accent: mat-palette($mat-orange, 800, 200, 400);

// The warn palette is optional (defaults to red).
$face-detect-webapp-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$face-detect-webapp-theme: mat-light-theme($face-detect-webapp-primary, $face-detect-webapp-accent, $face-detect-webapp-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($face-detect-webapp-theme);

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
ul { list-style: none };
.padded-list > li { padding-top: 1rem };
.mat-tab-body { margin-top: 1rem; }
mat-form-field { width: 100% !important; }
